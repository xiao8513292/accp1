<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.accp.mapper.SuppliersMapper" >
  <resultMap id="BaseResultMap" type="com.accp.domain.Suppliers" >
    <id column="suppliersId" property="suppliersid" jdbcType="INTEGER" />
    <result column="companyName" property="companyname" jdbcType="VARCHAR" />
    <result column="abbreviation" property="abbreviation" jdbcType="VARCHAR" />
    <result column="contacts" property="contacts" jdbcType="VARCHAR" />
    <result column="phone" property="phone" jdbcType="INTEGER" />
    <result column="eamil" property="eamil" jdbcType="VARCHAR" />
    <result column="telephone" property="telephone" jdbcType="VARCHAR" />
    <result column="procinceid" property="procinceid" jdbcType="INTEGER" />
    <result column="cityid" property="cityid" jdbcType="INTEGER" />
    <result column="regionid" property="regionid" jdbcType="INTEGER" />
    <result column="streets" property="streets" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    suppliersId, companyName, abbreviation, contacts, phone, eamil, telephone, procinceid, 
    cityid, regionid, streets
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.accp.domain.SuppliersExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from suppliers
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from suppliers
    where suppliersId = #{suppliersid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from suppliers
    where suppliersId = #{suppliersid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.accp.domain.SuppliersExample" >
    delete from suppliers
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.accp.domain.Suppliers" >
    insert into suppliers (suppliersId, companyName, abbreviation, 
      contacts, phone, eamil, 
      telephone, procinceid, cityid, 
      regionid, streets)
    values (#{suppliersid,jdbcType=INTEGER}, #{companyname,jdbcType=VARCHAR}, #{abbreviation,jdbcType=VARCHAR}, 
      #{contacts,jdbcType=VARCHAR}, #{phone,jdbcType=INTEGER}, #{eamil,jdbcType=VARCHAR}, 
      #{telephone,jdbcType=VARCHAR}, #{procinceid,jdbcType=INTEGER}, #{cityid,jdbcType=INTEGER}, 
      #{regionid,jdbcType=INTEGER}, #{streets,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.accp.domain.Suppliers" >
    insert into suppliers
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="suppliersid != null" >
        suppliersId,
      </if>
      <if test="companyname != null" >
        companyName,
      </if>
      <if test="abbreviation != null" >
        abbreviation,
      </if>
      <if test="contacts != null" >
        contacts,
      </if>
      <if test="phone != null" >
        phone,
      </if>
      <if test="eamil != null" >
        eamil,
      </if>
      <if test="telephone != null" >
        telephone,
      </if>
      <if test="procinceid != null" >
        procinceid,
      </if>
      <if test="cityid != null" >
        cityid,
      </if>
      <if test="regionid != null" >
        regionid,
      </if>
      <if test="streets != null" >
        streets,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="suppliersid != null" >
        #{suppliersid,jdbcType=INTEGER},
      </if>
      <if test="companyname != null" >
        #{companyname,jdbcType=VARCHAR},
      </if>
      <if test="abbreviation != null" >
        #{abbreviation,jdbcType=VARCHAR},
      </if>
      <if test="contacts != null" >
        #{contacts,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        #{phone,jdbcType=INTEGER},
      </if>
      <if test="eamil != null" >
        #{eamil,jdbcType=VARCHAR},
      </if>
      <if test="telephone != null" >
        #{telephone,jdbcType=VARCHAR},
      </if>
      <if test="procinceid != null" >
        #{procinceid,jdbcType=INTEGER},
      </if>
      <if test="cityid != null" >
        #{cityid,jdbcType=INTEGER},
      </if>
      <if test="regionid != null" >
        #{regionid,jdbcType=INTEGER},
      </if>
      <if test="streets != null" >
        #{streets,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.accp.domain.SuppliersExample" resultType="java.lang.Integer" >
    select count(*) from suppliers
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update suppliers
    <set >
      <if test="record.suppliersid != null" >
        suppliersId = #{record.suppliersid,jdbcType=INTEGER},
      </if>
      <if test="record.companyname != null" >
        companyName = #{record.companyname,jdbcType=VARCHAR},
      </if>
      <if test="record.abbreviation != null" >
        abbreviation = #{record.abbreviation,jdbcType=VARCHAR},
      </if>
      <if test="record.contacts != null" >
        contacts = #{record.contacts,jdbcType=VARCHAR},
      </if>
      <if test="record.phone != null" >
        phone = #{record.phone,jdbcType=INTEGER},
      </if>
      <if test="record.eamil != null" >
        eamil = #{record.eamil,jdbcType=VARCHAR},
      </if>
      <if test="record.telephone != null" >
        telephone = #{record.telephone,jdbcType=VARCHAR},
      </if>
      <if test="record.procinceid != null" >
        procinceid = #{record.procinceid,jdbcType=INTEGER},
      </if>
      <if test="record.cityid != null" >
        cityid = #{record.cityid,jdbcType=INTEGER},
      </if>
      <if test="record.regionid != null" >
        regionid = #{record.regionid,jdbcType=INTEGER},
      </if>
      <if test="record.streets != null" >
        streets = #{record.streets,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update suppliers
    set suppliersId = #{record.suppliersid,jdbcType=INTEGER},
      companyName = #{record.companyname,jdbcType=VARCHAR},
      abbreviation = #{record.abbreviation,jdbcType=VARCHAR},
      contacts = #{record.contacts,jdbcType=VARCHAR},
      phone = #{record.phone,jdbcType=INTEGER},
      eamil = #{record.eamil,jdbcType=VARCHAR},
      telephone = #{record.telephone,jdbcType=VARCHAR},
      procinceid = #{record.procinceid,jdbcType=INTEGER},
      cityid = #{record.cityid,jdbcType=INTEGER},
      regionid = #{record.regionid,jdbcType=INTEGER},
      streets = #{record.streets,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.accp.domain.Suppliers" >
    update suppliers
    <set >
      <if test="companyname != null" >
        companyName = #{companyname,jdbcType=VARCHAR},
      </if>
      <if test="abbreviation != null" >
        abbreviation = #{abbreviation,jdbcType=VARCHAR},
      </if>
      <if test="contacts != null" >
        contacts = #{contacts,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        phone = #{phone,jdbcType=INTEGER},
      </if>
      <if test="eamil != null" >
        eamil = #{eamil,jdbcType=VARCHAR},
      </if>
      <if test="telephone != null" >
        telephone = #{telephone,jdbcType=VARCHAR},
      </if>
      <if test="procinceid != null" >
        procinceid = #{procinceid,jdbcType=INTEGER},
      </if>
      <if test="cityid != null" >
        cityid = #{cityid,jdbcType=INTEGER},
      </if>
      <if test="regionid != null" >
        regionid = #{regionid,jdbcType=INTEGER},
      </if>
      <if test="streets != null" >
        streets = #{streets,jdbcType=VARCHAR},
      </if>
    </set>
    where suppliersId = #{suppliersid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.accp.domain.Suppliers" >
    update suppliers
    set companyName = #{companyname,jdbcType=VARCHAR},
      abbreviation = #{abbreviation,jdbcType=VARCHAR},
      contacts = #{contacts,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=INTEGER},
      eamil = #{eamil,jdbcType=VARCHAR},
      telephone = #{telephone,jdbcType=VARCHAR},
      procinceid = #{procinceid,jdbcType=INTEGER},
      cityid = #{cityid,jdbcType=INTEGER},
      regionid = #{regionid,jdbcType=INTEGER},
      streets = #{streets,jdbcType=VARCHAR}
    where suppliersId = #{suppliersid,jdbcType=INTEGER}
  </update>
</mapper>